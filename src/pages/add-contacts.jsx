import { IconSignupProfile } from "@/assets/Icons";
import { PrimaryBtn } from "@/common/PrimaryBtn";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Input } from "postcss";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { useEffect, useRef, useState } from "react";
import { useForm } from "react-hook-form";
import { IoEyeOff, IoEyeSharp } from "react-icons/io5";
import { MdArrowBack } from "react-icons/md";
import { loginService } from "@/services/loginService";
import { useAuth, useAuthActions } from "@/Provider/AuthProvider";
import Router from "next/router";
export default function Home() {
  const [value, setValue] = useState(null);
  //   const [show, setShow] = useState(false);
  const { user, loading } = useAuth();
  const dispatcher = useAuthActions();
  const schema = yup
    .object({
      tell: yup.string().required(),
      name: yup.string("اجباری").required("salam"),
    })
    .required();

  const [passwordShow, setPasswordShow] = useState(false);
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors, isValid },
  } = useForm({
    resolver: yupResolver(schema),
  });
  const onSubmit = (data) => {
    dispatcher({ type: "LOGIN", payload: data });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="px-6 flex flex-col gap-6 items-center ">
        <div className="h-14 w-full bg-primary-900 px-6 py-2 flex flex-row items-center justify-between">
          <div className="flex flex-row items-center gap-2">
            <button
              onClick={() => Router.push("/contacts")}
              className="text-white flex flex-col text-2xl items-start"
            >
              <MdArrowBack />
            </button>
            <div className="text-sm text-white">Add Contact</div>
          </div>
        </div>

        <form
          onSubmit={handleSubmit(onSubmit)}
          className="flex flex-col items-center justify-between h-[calc(100vh-96px)]  px-6 w-full"
        >
          <div className="w-full flex flex-col gap-8 ">
            <input
              type={"text"}
              {...register("name")}
              placeholder="Name"
              className="w-full h-12 rounded-4xl focus:border border-gray-50 outline-none p-4 bg-primary-50  text-sm placeholder:text-gray-300 text-gray-900 "
            />

            <div className="w-full h-12 rounded-4xl bg-primary-50 relative">
              <input
                type={"text"}
                {...register("tell")}
                placeholder="Cellphone"
                className="w-full h-12 rounded-4xl focus:border border-gray-50 outline-none p-4 bg-primary-50  text-sm placeholder:text-gray-300 text-gray-900 "
              />
            </div>
          </div>
          {errors.mail && <p role="alert">{errors.mail?.message}</p>}
          <div className="w-full h-12">
            {/* <PrimaryBtn text="ثبت" onClick={() => setLevel(1)} /> */}
            <input
              type="submit"
              disabled={!isValid}
              className="w-full bg-primary-900 rounded-4xl text-white h-12 disabled:cursor-not-allowed"
              value="Add Contact"
            />
          </div>
        </form>
      </main>
    </>
  );
}
